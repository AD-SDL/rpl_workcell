#############################
# Laboratory Configuration	#
#############################

# Adjust these parameters to meet your needs
# You can override these at run time by running `make <target> <VARIABLE>="..."`

# Project Configuration
REPO_DIR := $(shell git rev-parse --show-toplevel)
WORKCELLS_DIR := $(REPO_DIR)/workcells

# Docker Configuration
LAB_COMPOSE_FILE := $(REPO_DIR)/compose.yaml
COMPOSE_FILE ?= $(LAB_COMPOSE_FILE) # Only assigned if not already assigned by the user/application Makefile
# Make sure this file is in .gitignore or equivalent
ENV_FILE := $(REPO_DIR)/.env

# This is where the data from the workcell and your application will be stored
# If these directories don't exist, they will be created
WEI_DATA_DIR := $(REPO_DIR)/.wei
REDIS_DIR := $(WEI_DATA_DIR)/redis
# Whether or not to send events to Diaspora (set to true to turn on)
USE_DIASPORA := false
# This is the default target to run when you run `make` with no arguments
.DEFAULT_GOAL := help

########################
# Config-related Rules #
########################
NOT_PHONY += $(REPO_DIR)/.env $(WEI_DATA_DIR) $(REDIS_DIR)

init: $(REPO_DIR)/.env $(WEI_DATA_DIR) $(REDIS_DIR) # Do the initial configuration of the project

# Generate our .env whenever we change our config
# If you depend on files besides the makefiles to generate config,
# add them as dependencies to the .env rule
$(REPO_DIR)/.env: $(MAKEFILE_LIST)
	@echo "# THIS FILE IS AUTOGENERATED, CHANGE THE VALUES IN THE MAKEFILE" > $(ENV_FILE)
	@echo "USER_ID=$(shell id -u)" >> $(ENV_FILE)
	@echo "GROUP_ID=$(shell id -g)" >> $(ENV_FILE)
	@echo "MHF_HOST_UID=$(shell id -u)" >> $(ENV_FILE)
	@echo "MHF_HOST_GID=$(shell id -g)" >> $(ENV_FILE)
# The following adds every variable in the Makefiles to the .env file,
# except for everything in ENV_FILTER and ENV_FILTER itself
	@$(foreach v,\
		$(filter-out $(ENV_FILTER) ENV_FILTER,$(.VARIABLES)),\
		echo "$(v)=$($(v))" >> $(ENV_FILE);)

$(WEI_DATA_DIR):
	mkdir -p $(WEI_DATA_DIR)

$(REDIS_DIR):
	mkdir -p $(REDIS_DIR)
